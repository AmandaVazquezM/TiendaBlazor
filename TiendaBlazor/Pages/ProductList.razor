
@page "/productlist"
@using TiendaBlazor.Services
@using TiendaBlazor.Models
@using Microsoft.EntityFrameworkCore

@inject JsonDataService DataService
@inject CartService Cart

<h2>Nuestros productos</h2>


<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
    Data="@products" TItem="Product" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Product" Title="Image" Frozen="true" Sortable="false" Filterable="false" Width="80px" TextAlign="TextAlign.Center">
            <Template Context="data">
                <RadzenImage Path="@data.Image" class="rz-gravatar" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Product" Property="Name" Title=" Name" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Product" Property="Description" Title="Description" Frozen="true" Width="300px" />
        <RadzenDataGridColumn TItem="Product" Property="Price" Title="Price" Frozen="true" Width="100px" />
        <RadzenDataGridColumn TItem="Product" Property="Quantity" Title="Quantity" Frozen="true" Filterable="false" Width="120px" />
        <RadzenDataGridColumn TItem="Product" Width="120px" Frozen="true" Filterable="false">
            <Template Context="Product">
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                    <RadzenButton Click="@((args) => AddToCart(Product))" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
                </RadzenStack>
                <br />
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                    <RadzenButton Click="@((args) => DecrementQuantity(Product))" Text="-" ButtonStyle="ButtonStyle.Danger" />
                </RadzenStack>
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>


@code {
    IEnumerable<Product> products;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // Obtener la lista de productos desde el servicio de datos
        products =  DataService.GetProducts();
    }

    private void AddToCart(Product product)
    {
        // Agregar el producto al carrito
        Cart.AddToCart(product);
        // Actualizar la cantidad del producto en la lista
        product.Quantity++;

    }

    private void DecrementQuantity(Product product)
    {
        // Decrementar la cantidad del producto en 1, pero no por debajo de 1
        if (product.Quantity > 1)
        {
            product.Quantity--;

        }
    }


}
